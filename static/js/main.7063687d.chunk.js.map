{"version":3,"sources":["components/card-component.jsx","components/card-list.jsx","components/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","user","setState","this","filteredList","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,EAAO,SAACC,GACjB,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAU,SAACR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC/B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJVM,G,MAAW,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACnC,OACJ,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2BKG,G,wDA9Bb,aAAc,IAAD,8BACb,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJD,E,qDAQf,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAC3EF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAGtC,WAAS,IAAD,SACwBE,KAAKR,MAA5BR,EADD,EACCA,SAASS,EADV,EACUA,YACVQ,EAAajB,EAASkB,QAAO,SAAAvB,GAAO,OACxCA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACA,qDACA,cAAC,EAAD,CAAWW,YAAY,qBACvBC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACrD,cAAC,EAAD,CAAUvB,SAAUiB,W,GAxBNO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7063687d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=>{\r\n    return(\r\n    <div className='card-container'>\r\n        <img alt=\"images\" src={`https://robohash.org/${props.monster.id}?set=set2&size=120x120`} />\r\n        <h3>{props.monster.name}</h3>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    );\r\n}","import React from \"react\";\r\nimport './card-list-component.css';\r\nimport { Card } from \"./card-component\";\r\n\r\nexport const CardList =(props)=>{\r\n    return(\r\n        <div className='card-list'>\r\n        {props.monsters.map(monster =>(\r\n    <Card key={monster.id} monster={monster}/>\r\n  ))}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox= ({placeholder, handleChange})=>{\r\n    return(\r\n<input className='search' \r\ntype=\"search\" \r\nplaceholder={placeholder} \r\nonChange={handleChange}/>\r\n    )}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list';\nimport { SearchBox } from './components/search-box';\nimport './App.css'\n\nclass App extends Component{\n  constructor(){\n  super();\n  this.state={\n    monsters:[],\n    searchField:\"\"\n  }\n}\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json())\n  .then(user=>this.setState({monsters:user}));\n}\n\nrender(){\n  const {monsters,searchField} =this.state;\n  const filteredList=monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n  return (\n    <div className=\"App\">\n    <h1>Monsters Collection</h1>\n    <SearchBox placeholder=\"Search the Monster\" \n    handleChange={e=>this.setState({searchField:e.target.value})}/>\n    <CardList monsters={filteredList} />\n  </div>\n  \n  );\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}